{
 "Resources": {
  "ConfigBucket": {
   "Type": "AWS::S3::Bucket"
  },
  "ConfigTopic": {
   "Type": "AWS::SNS::Topic"
  },
  "Ec2Volume": {
   "Type": "AWS::EC2::Volume",
   "Properties": {
    "AutoEnableIO": false,
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "Size": 5,
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Ec2VolumeTagValue"
     }
    ]
   }
  },
  "LambdaExecutionRole": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Principal": {
        "Service": [
         "lambda.amazonaws.com"
        ]
       },
       "Effect": "Allow",
       "Action": [
        "sts:AssumeRole"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Resource": "*",
         "Effect": "Allow",
         "Action": [
          "logs:*",
          "config:PutEvaluations",
          "ec2:DescribeVolumeAttribute"
         ]
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   }
  },
  "ConfigRole": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Principal": {
        "Service": [
         "config.amazonaws.com"
        ]
       },
       "Effect": "Allow",
       "Action": [
        "sts:AssumeRole"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     "arn:aws:iam::aws:policy/service-role/AWS_ConfigRole"
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ConfigBucket"
            }
           ]
          ]
         },
         "Effect": "Allow",
         "Action": "s3:GetBucketAcl"
        },
        {
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ConfigBucket"
            },
            "/AWSLogs/",
            {
             "Ref": "AWS::AccountId"
            },
            "/*"
           ]
          ]
         },
         "Action": "s3:PutObject",
         "Condition": {
          "StringEquals": {
           "s3:x-amz-acl": "bucket-owner-full-control"
          }
         },
         "Effect": "Allow"
        },
        {
         "Resource": "*",
         "Effect": "Allow",
         "Action": "config:Put*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   }
  },
  "ConfigTopicPolicy": {
   "Type": "AWS::SNS::TopicPolicy",
   "Properties": {
    "PolicyDocument": {
     "Id": "ConfigTopicPolicy",
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "SNS:Publish",
       "Principal": {
        "Service": "config.amazonaws.com"
       },
       "Effect": "Allow",
       "Resource": "*"
      }
     ]
    },
    "Topics": [
     {
      "Ref": "ConfigTopic"
     }
    ]
   }
  },
  "DeliveryChannel": {
   "Type": "AWS::Config::DeliveryChannel",
   "Properties": {
    "ConfigSnapshotDeliveryProperties": {
     "DeliveryFrequency": "Six_Hours"
    },
    "S3BucketName": {
     "Ref": "ConfigBucket"
    },
    "SnsTopicARN": {
     "Ref": "ConfigTopic"
    }
   }
  },
  "VolumeAutoEnableIOComplianceCheck": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "var aws  = require('aws-sdk');\nvar config = new aws.ConfigService();\nvar ec2 = new aws.EC2();\nexports.handler = function(event, context) {\n    compliance = evaluateCompliance(event, function(compliance, event) {\n        var configurationItem = JSON.parse(event.invokingEvent).configurationItem;\n        var putEvaluationsRequest = {\n            Evaluations: [{\n                ComplianceResourceType: configurationItem.resourceType,\n                ComplianceResourceId: configurationItem.resourceId,\n                ComplianceType: compliance,\n                OrderingTimestamp: configurationItem.configurationItemCaptureTime\n            }],\n            ResultToken: event.resultToken\n        };\n        config.putEvaluations(putEvaluationsRequest, function(err, data) {\n            if (err) context.fail(err);\n            else context.succeed(data);\n        });\n    });\n};\nfunction evaluateCompliance(event, doReturn) {\n    var configurationItem = JSON.parse(event.invokingEvent).configurationItem;\n    var status = configurationItem.configurationItemStatus;\n    if (configurationItem.resourceType !== 'AWS::EC2::Volume' || event.eventLeftScope || (status !== 'OK' && status !== 'ResourceDiscovered'))\n        doReturn('NOT_APPLICABLE', event);\n    else ec2.describeVolumeAttribute({VolumeId: configurationItem.resourceId, Attribute: 'autoEnableIO'}, function(err, data) {\n        if (err) context.fail(err);\n        else if (data.AutoEnableIO.Value) doReturn('COMPLIANT', event);\n        else doReturn('NON_COMPLIANT', event);\n    });\n}"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   }
  },
  "ConfigPermissionToCallLambda": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "VolumeAutoEnableIOComplianceCheck",
      "Arn"
     ]
    },
    "Principal": "config.amazonaws.com"
   }
  },
  "ConfigRecorder": {
   "Type": "AWS::Config::ConfigurationRecorder",
   "Properties": {
    "Name": "default",
    "RecordingGroup": {
     "ResourceTypes": [
      "AWS::EC2::Volume"
     ]
    },
    "RoleARN": {
     "Fn::GetAtt": [
      "ConfigRole",
      "Arn"
     ]
    }
   }
  },
  "ConfigRuleForVolumeAutoEnableIO": {
   "Type": "AWS::Config::ConfigRule",
   "Properties": {
    "ConfigRuleName": "ConfigRuleForVolumeAutoEnableIO",
    "Scope": {
     "ComplianceResourceId": {
      "Ref": "Ec2Volume"
     },
     "ComplianceResourceTypes": [
      "AWS::EC2::Volume"
     ]
    },
    "Source": {
     "Owner": "CUSTOM_LAMBDA",
     "SourceDetails": [
      {
       "EventSource": "aws.config",
       "MessageType": "ConfigurationItemChangeNotification"
      }
     ],
     "SourceIdentifier": {
      "Fn::GetAtt": [
       "VolumeAutoEnableIOComplianceCheck",
       "Arn"
      ]
     }
    }
   },
   "DependsOn": [
    "ConfigPermissionToCallLambda",
    "ConfigRecorder"
   ]
  },
  "ConfigRuleForVolumeTags": {
   "Type": "AWS::Config::ConfigRule",
   "Properties": {
    "InputParameters": {
     "tag1Key": "CostCenter"
    },
    "Scope": {
     "ComplianceResourceTypes": [
      "AWS::EC2::Volume"
     ]
    },
    "Source": {
     "Owner": "AWS",
     "SourceIdentifier": "REQUIRED_TAGS"
    }
   },
   "DependsOn": [
    "ConfigRecorder"
   ]
  }
 },
 "Outputs": {
  "ConfigRuleForVolumeTagsArn": {
   "Value": {
    "Fn::GetAtt": [
     "ConfigRuleForVolumeTags",
     "Arn"
    ]
   }
  },
  "ConfigRuleForVolumeTagsConfigRuleId": {
   "Value": {
    "Fn::GetAtt": [
     "ConfigRuleForVolumeTags",
     "ConfigRuleId"
    ]
   }
  },
  "ConfigRuleForVolumeAutoEnableIOComplianceType": {
   "Value": {
    "Fn::GetAtt": [
     "ConfigRuleForVolumeAutoEnableIO",
     "Compliance.Type"
    ]
   }
  }
 }
}