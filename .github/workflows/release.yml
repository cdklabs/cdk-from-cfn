# .github/workflows/release.yml

name: release
on:
  push:
    branches:
      - release

jobs:
  release_to_crates:
    name: Release to crates.io
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
      - name: Set git identity
        run: |-
          git config user.name "cdklabs-automation"
          git config user.email "aws-cdk-dev+cdklabs@amazon.com"
      - name: Install cargo-release
        uses: taiki-e/install-action@main
        with:
          tool: cargo-binstall
      - run: cargo binstall --no-confirm cargo-release
      - run: cargo release --all-features --verbose minor --execute --no-confirm --no-push
      - name: Open pull request
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          author: cdklabs-automation <aws-cdk-dev+cdklabs@amazon.com>
          committer: cdklabs-automation <aws-cdk-dev+cdklabs@amazon.com>
          signoff: true
          branch: github-actions/release
          base: main
          body: |
            release: <%= crate.name %> v<%= version.actual %>

            [Workflow Run]: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          commit-message: |-
            release: <%= crate.name %> v<%= version.actual %>

            [Workflow Run]: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

          title: |
            release: <%= crate.name %> v<%= version.actual %>
          labels: auto-approve
      - name: Push New Tag
        run: git push origin --tags
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_TOKEN }}

  release_to_npm:
    name: Release to npm
    needs: release_to_crates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: github-actions/release
      - name: Setup Node.js
        uses: actions/setup-node@main
        with:
          node-version: latest
      - uses: jetli/wasm-pack-action@v0.4.0
        name: Install wasm-pack
        with:
          version: latest
      - name: Prepare Release
        run: |-
          wasm-pack build --all-features --target=nodejs --out-name=index
      - name: Release
        run: |-
          npm set "//registry.npmjs.org/:_authToken" ${{ secrets.NPM_TOKEN }}
          wasm-pack publish --tag latest
