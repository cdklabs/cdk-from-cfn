on:
  push:
    branches: [main]
  pull_request: {}
  workflow_dispatch: {}
  merge_group:
    branches:
      - main
      - release
name: status-checks

jobs:
  lint_and_format:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: ðŸ¦€ Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: âš¡ Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cargo

      - name: Install just
        uses: baptiste0928/cargo-install@v3
        with:
          crate: just

      - name: Run lint
        run: just lint

  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v5
      - uses: rustsec/audit-check@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  testing:
    name: Run Tests
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v5

      - name: ðŸ¦€ Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: âš¡ Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cargo

      - name: Install just
        uses: baptiste0928/cargo-install@v3
        with:
          crate: just

      - name: Install cargo-llvm-cov
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-llvm-cov

      - name: Install Java 17
        uses: actions/setup-java@v5
        with:
          distribution: corretto
          java-version: 17

      - name: Install Dotnet 8
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 8.x

      - name: Try to fix .NET issue
        # https://github.com/dotnet/runtime/issues/91987
        run: |
          sudo rm -rf /tmp/.dotnet

      - name: Tests with Coverage
        run: just test-cov

      - name: Coverage Report
        run: |
          cargo llvm-cov report --hide-instantiations --ignore-filename-regex '^(tests?/.*\.rs|.*/tests?\.rs|.*testing.*/.*\.rs|.*/testing\.rs)$' --codecov --output-path target/codecov.json
          cargo llvm-cov report --hide-instantiations --ignore-filename-regex '^(tests?/.*\.rs|.*/tests?\.rs|.*testing.*/.*\.rs|.*/testing\.rs)$' --html --output-dir target/coverage
          cargo llvm-cov report --hide-instantiations --ignore-filename-regex '^(tests?/.*\.rs|.*/tests?\.rs|.*testing.*/.*\.rs|.*/testing\.rs)$'

      - name: Upload Coverage to CodeCov
        uses: codecov/codecov-action@v5
        with:
          use_oidc: true
          fail_ci_if_error: true
          files: target/codecov.json
          name: codecov.json

  wasm:
    name: Build wasm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: ðŸ¦€ Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Setup Node.js
        uses: actions/setup-node@main
        with:
          node-version: lts/*

      - name: âš¡ Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cargo

      - name: Install wasm-pack
        uses: baptiste0928/cargo-install@v3
        with:
          crate: wasm-pack

      - name: Build wasm package
        run: |-
          wasm-pack build --all-features --target=nodejs --out-name=index
